
Day03_2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000320  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004a8  080004a8  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004a8  080004a8  00002004  2**0
                  CONTENTS
  4 .ARM          00000000  080004a8  080004a8  00002004  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004a8  080004a8  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004a8  080004a8  000014a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080004ac  080004ac  000014ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  080004b0  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00002004  2**0
                  CONTENTS
 10 .bss          0000001c  20000004  20000004  00002004  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00002004  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000af1  00000000  00000000  0000202e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000387  00000000  00000000  00002b1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00002ea8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000078  00000000  00000000  00002f60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001804a  00000000  00000000  00002fd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000f86  00000000  00000000  0001b022  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008b726  00000000  00000000  0001bfa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a76ce  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000018c  00000000  00000000  000a7714  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 0000001f  00000000  00000000  000a78a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000005d  00000000  00000000  000a78bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000004 	.word	0x20000004
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000490 	.word	0x08000490

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000008 	.word	0x20000008
 80001c4:	08000490 	.word	0x08000490

080001c8 <LedInit>:


#include "led.h"
#include "stm32f4xx.h"

void LedInit(uint32_t pin){
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	6078      	str	r0, [r7, #4]

	RCC->AHB1ENR |= BV(LED_GPIO_EN);
 80001d0:	4b2b      	ldr	r3, [pc, #172]	@ (8000280 <LedInit+0xb8>)
 80001d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d4:	4a2a      	ldr	r2, [pc, #168]	@ (8000280 <LedInit+0xb8>)
 80001d6:	f043 0308 	orr.w	r3, r3, #8
 80001da:	6313      	str	r3, [r2, #48]	@ 0x30
	LED_GPIO->MODER &= ~BV(pin * 2 + 1);
 80001dc:	4b29      	ldr	r3, [pc, #164]	@ (8000284 <LedInit+0xbc>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	687a      	ldr	r2, [r7, #4]
 80001e2:	0052      	lsls	r2, r2, #1
 80001e4:	3201      	adds	r2, #1
 80001e6:	2101      	movs	r1, #1
 80001e8:	fa01 f202 	lsl.w	r2, r1, r2
 80001ec:	43d2      	mvns	r2, r2
 80001ee:	4611      	mov	r1, r2
 80001f0:	4a24      	ldr	r2, [pc, #144]	@ (8000284 <LedInit+0xbc>)
 80001f2:	400b      	ands	r3, r1
 80001f4:	6013      	str	r3, [r2, #0]
	LED_GPIO->MODER |=BV(pin * 2);
 80001f6:	4b23      	ldr	r3, [pc, #140]	@ (8000284 <LedInit+0xbc>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	687a      	ldr	r2, [r7, #4]
 80001fc:	0052      	lsls	r2, r2, #1
 80001fe:	2101      	movs	r1, #1
 8000200:	fa01 f202 	lsl.w	r2, r1, r2
 8000204:	4611      	mov	r1, r2
 8000206:	4a1f      	ldr	r2, [pc, #124]	@ (8000284 <LedInit+0xbc>)
 8000208:	430b      	orrs	r3, r1
 800020a:	6013      	str	r3, [r2, #0]

	LED_GPIO->OSPEEDR &= ~(BV(pin * 2 + 1)| BV(pin * 2));
 800020c:	4b1d      	ldr	r3, [pc, #116]	@ (8000284 <LedInit+0xbc>)
 800020e:	689b      	ldr	r3, [r3, #8]
 8000210:	687a      	ldr	r2, [r7, #4]
 8000212:	0052      	lsls	r2, r2, #1
 8000214:	3201      	adds	r2, #1
 8000216:	2101      	movs	r1, #1
 8000218:	4091      	lsls	r1, r2
 800021a:	687a      	ldr	r2, [r7, #4]
 800021c:	0052      	lsls	r2, r2, #1
 800021e:	2001      	movs	r0, #1
 8000220:	fa00 f202 	lsl.w	r2, r0, r2
 8000224:	430a      	orrs	r2, r1
 8000226:	43d2      	mvns	r2, r2
 8000228:	4611      	mov	r1, r2
 800022a:	4a16      	ldr	r2, [pc, #88]	@ (8000284 <LedInit+0xbc>)
 800022c:	400b      	ands	r3, r1
 800022e:	6093      	str	r3, [r2, #8]

	LED_GPIO->PUPDR &= ~(BV(pin * 2 + 1) | BV (pin * 2));
 8000230:	4b14      	ldr	r3, [pc, #80]	@ (8000284 <LedInit+0xbc>)
 8000232:	68db      	ldr	r3, [r3, #12]
 8000234:	687a      	ldr	r2, [r7, #4]
 8000236:	0052      	lsls	r2, r2, #1
 8000238:	3201      	adds	r2, #1
 800023a:	2101      	movs	r1, #1
 800023c:	4091      	lsls	r1, r2
 800023e:	687a      	ldr	r2, [r7, #4]
 8000240:	0052      	lsls	r2, r2, #1
 8000242:	2001      	movs	r0, #1
 8000244:	fa00 f202 	lsl.w	r2, r0, r2
 8000248:	430a      	orrs	r2, r1
 800024a:	43d2      	mvns	r2, r2
 800024c:	4611      	mov	r1, r2
 800024e:	4a0d      	ldr	r2, [pc, #52]	@ (8000284 <LedInit+0xbc>)
 8000250:	400b      	ands	r3, r1
 8000252:	60d3      	str	r3, [r2, #12]

	LED_GPIO->OTYPER &= ~BV(pin);
 8000254:	4b0b      	ldr	r3, [pc, #44]	@ (8000284 <LedInit+0xbc>)
 8000256:	685b      	ldr	r3, [r3, #4]
 8000258:	2101      	movs	r1, #1
 800025a:	687a      	ldr	r2, [r7, #4]
 800025c:	fa01 f202 	lsl.w	r2, r1, r2
 8000260:	43d2      	mvns	r2, r2
 8000262:	4611      	mov	r1, r2
 8000264:	4a07      	ldr	r2, [pc, #28]	@ (8000284 <LedInit+0xbc>)
 8000266:	400b      	ands	r3, r1
 8000268:	6053      	str	r3, [r2, #4]

	LED_GPIO->BSRR = BV(pin + 16);
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	3310      	adds	r3, #16
 800026e:	2201      	movs	r2, #1
 8000270:	409a      	lsls	r2, r3
 8000272:	4b04      	ldr	r3, [pc, #16]	@ (8000284 <LedInit+0xbc>)
 8000274:	619a      	str	r2, [r3, #24]

}
 8000276:	bf00      	nop
 8000278:	370c      	adds	r7, #12
 800027a:	46bd      	mov	sp, r7
 800027c:	bc80      	pop	{r7}
 800027e:	4770      	bx	lr
 8000280:	40023800 	.word	0x40023800
 8000284:	40020c00 	.word	0x40020c00

08000288 <LedOn>:


void LedOn(uint32_t pin){
 8000288:	b480      	push	{r7}
 800028a:	b083      	sub	sp, #12
 800028c:	af00      	add	r7, sp, #0
 800028e:	6078      	str	r0, [r7, #4]

	LED_GPIO->BSRR= BV(pin);
 8000290:	2201      	movs	r2, #1
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	409a      	lsls	r2, r3
 8000296:	4b03      	ldr	r3, [pc, #12]	@ (80002a4 <LedOn+0x1c>)
 8000298:	619a      	str	r2, [r3, #24]
}
 800029a:	bf00      	nop
 800029c:	370c      	adds	r7, #12
 800029e:	46bd      	mov	sp, r7
 80002a0:	bc80      	pop	{r7}
 80002a2:	4770      	bx	lr
 80002a4:	40020c00 	.word	0x40020c00

080002a8 <LedOff>:

void LedOff(uint32_t pin){
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]

	LED_GPIO->BSRR = BV(pin + 16);
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	3310      	adds	r3, #16
 80002b4:	2201      	movs	r2, #1
 80002b6:	409a      	lsls	r2, r3
 80002b8:	4b03      	ldr	r3, [pc, #12]	@ (80002c8 <LedOff+0x20>)
 80002ba:	619a      	str	r2, [r3, #24]

}
 80002bc:	bf00      	nop
 80002be:	370c      	adds	r7, #12
 80002c0:	46bd      	mov	sp, r7
 80002c2:	bc80      	pop	{r7}
 80002c4:	4770      	bx	lr
 80002c6:	bf00      	nop
 80002c8:	40020c00 	.word	0x40020c00

080002cc <DelayMs>:
uint32_t DWT_Init(void);

#ifndef DELAY_MS
#define DELAY_MS

static inline void DelayMs(volatile uint32_t ms) {
 80002cc:	b480      	push	{r7}
 80002ce:	b085      	sub	sp, #20
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
	uint32_t init_ticks = DWT->CYCCNT;
 80002d4:	4b0e      	ldr	r3, [pc, #56]	@ (8000310 <DelayMs+0x44>)
 80002d6:	685b      	ldr	r3, [r3, #4]
 80002d8:	60fb      	str	r3, [r7, #12]
	uint32_t ticks = (SystemCoreClock / 1000);
 80002da:	4b0e      	ldr	r3, [pc, #56]	@ (8000314 <DelayMs+0x48>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a0e      	ldr	r2, [pc, #56]	@ (8000318 <DelayMs+0x4c>)
 80002e0:	fba2 2303 	umull	r2, r3, r2, r3
 80002e4:	099b      	lsrs	r3, r3, #6
 80002e6:	60bb      	str	r3, [r7, #8]
	ms *= ticks;
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	68ba      	ldr	r2, [r7, #8]
 80002ec:	fb02 f303 	mul.w	r3, r2, r3
 80002f0:	607b      	str	r3, [r7, #4]
	while ((DWT->CYCCNT - init_ticks) < ms);
 80002f2:	bf00      	nop
 80002f4:	4b06      	ldr	r3, [pc, #24]	@ (8000310 <DelayMs+0x44>)
 80002f6:	685a      	ldr	r2, [r3, #4]
 80002f8:	68fb      	ldr	r3, [r7, #12]
 80002fa:	1ad2      	subs	r2, r2, r3
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	429a      	cmp	r2, r3
 8000300:	d3f8      	bcc.n	80002f4 <DelayMs+0x28>
}
 8000302:	bf00      	nop
 8000304:	bf00      	nop
 8000306:	3714      	adds	r7, #20
 8000308:	46bd      	mov	sp, r7
 800030a:	bc80      	pop	{r7}
 800030c:	4770      	bx	lr
 800030e:	bf00      	nop
 8000310:	e0001000 	.word	0xe0001000
 8000314:	20000000 	.word	0x20000000
 8000318:	10624dd3 	.word	0x10624dd3

0800031c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0

	SystemInit();
 8000320:	f000 f832 	bl	8000388 <SystemInit>
	DelayMs(1);
 8000324:	2001      	movs	r0, #1
 8000326:	f7ff ffd1 	bl	80002cc <DelayMs>
	LedInit(LED_GREEN);
 800032a:	200c      	movs	r0, #12
 800032c:	f7ff ff4c 	bl	80001c8 <LedInit>
	LedInit(LED_ORANGE);
 8000330:	200d      	movs	r0, #13
 8000332:	f7ff ff49 	bl	80001c8 <LedInit>
	LedInit(LED_RED);
 8000336:	200e      	movs	r0, #14
 8000338:	f7ff ff46 	bl	80001c8 <LedInit>
	LedInit(LED_BLUE) ;
 800033c:	200f      	movs	r0, #15
 800033e:	f7ff ff43 	bl	80001c8 <LedInit>


	while(1){
		LedOn(LED_GREEN);
 8000342:	200c      	movs	r0, #12
 8000344:	f7ff ffa0 	bl	8000288 <LedOn>
		LedOn(LED_ORANGE);
 8000348:	200d      	movs	r0, #13
 800034a:	f7ff ff9d 	bl	8000288 <LedOn>
		LedOn(LED_RED);
 800034e:	200e      	movs	r0, #14
 8000350:	f7ff ff9a 	bl	8000288 <LedOn>
		LedOn(LED_BLUE);
 8000354:	200f      	movs	r0, #15
 8000356:	f7ff ff97 	bl	8000288 <LedOn>
		DelayMs(500);
 800035a:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800035e:	f7ff ffb5 	bl	80002cc <DelayMs>
		LedOff(LED_GREEN);
 8000362:	200c      	movs	r0, #12
 8000364:	f7ff ffa0 	bl	80002a8 <LedOff>
		LedOff(LED_ORANGE);
 8000368:	200d      	movs	r0, #13
 800036a:	f7ff ff9d 	bl	80002a8 <LedOff>
		LedOff(LED_RED);
 800036e:	200e      	movs	r0, #14
 8000370:	f7ff ff9a 	bl	80002a8 <LedOff>
		LedOff(LED_BLUE);
 8000374:	200f      	movs	r0, #15
 8000376:	f7ff ff97 	bl	80002a8 <LedOff>
		DelayMs(500);
 800037a:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800037e:	f7ff ffa5 	bl	80002cc <DelayMs>
		LedOn(LED_GREEN);
 8000382:	bf00      	nop
 8000384:	e7dd      	b.n	8000342 <main+0x26>
	...

08000388 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000388:	b580      	push	{r7, lr}
 800038a:	af00      	add	r7, sp, #0
  DWT_Init();
 800038c:	f000 f802 	bl	8000394 <DWT_Init>
}
 8000390:	bf00      	nop
 8000392:	bd80      	pop	{r7, pc}

08000394 <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 8000394:	b480      	push	{r7}
 8000396:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 8000398:	4b14      	ldr	r3, [pc, #80]	@ (80003ec <DWT_Init+0x58>)
 800039a:	68db      	ldr	r3, [r3, #12]
 800039c:	4a13      	ldr	r2, [pc, #76]	@ (80003ec <DWT_Init+0x58>)
 800039e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80003a2:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 80003a4:	4b11      	ldr	r3, [pc, #68]	@ (80003ec <DWT_Init+0x58>)
 80003a6:	68db      	ldr	r3, [r3, #12]
 80003a8:	4a10      	ldr	r2, [pc, #64]	@ (80003ec <DWT_Init+0x58>)
 80003aa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80003ae:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 80003b0:	4b0f      	ldr	r3, [pc, #60]	@ (80003f0 <DWT_Init+0x5c>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	4a0e      	ldr	r2, [pc, #56]	@ (80003f0 <DWT_Init+0x5c>)
 80003b6:	f023 0301 	bic.w	r3, r3, #1
 80003ba:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80003bc:	4b0c      	ldr	r3, [pc, #48]	@ (80003f0 <DWT_Init+0x5c>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a0b      	ldr	r2, [pc, #44]	@ (80003f0 <DWT_Init+0x5c>)
 80003c2:	f043 0301 	orr.w	r3, r3, #1
 80003c6:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 80003c8:	4b09      	ldr	r3, [pc, #36]	@ (80003f0 <DWT_Init+0x5c>)
 80003ca:	2200      	movs	r2, #0
 80003cc:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 80003ce:	bf00      	nop
    __ASM volatile ("NOP");
 80003d0:	bf00      	nop
    __ASM volatile ("NOP");
 80003d2:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 80003d4:	4b06      	ldr	r3, [pc, #24]	@ (80003f0 <DWT_Init+0x5c>)
 80003d6:	685b      	ldr	r3, [r3, #4]
 80003d8:	2b00      	cmp	r3, #0
 80003da:	bf0c      	ite	eq
 80003dc:	2301      	moveq	r3, #1
 80003de:	2300      	movne	r3, #0
 80003e0:	b2db      	uxtb	r3, r3
}
 80003e2:	4618      	mov	r0, r3
 80003e4:	46bd      	mov	sp, r7
 80003e6:	bc80      	pop	{r7}
 80003e8:	4770      	bx	lr
 80003ea:	bf00      	nop
 80003ec:	e000edf0 	.word	0xe000edf0
 80003f0:	e0001000 	.word	0xe0001000

080003f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003f4:	480d      	ldr	r0, [pc, #52]	@ (800042c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003f8:	f7ff ffc6 	bl	8000388 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003fc:	480c      	ldr	r0, [pc, #48]	@ (8000430 <LoopForever+0x6>)
  ldr r1, =_edata
 80003fe:	490d      	ldr	r1, [pc, #52]	@ (8000434 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000400:	4a0d      	ldr	r2, [pc, #52]	@ (8000438 <LoopForever+0xe>)
  movs r3, #0
 8000402:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000404:	e002      	b.n	800040c <LoopCopyDataInit>

08000406 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000406:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000408:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800040a:	3304      	adds	r3, #4

0800040c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800040c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800040e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000410:	d3f9      	bcc.n	8000406 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000412:	4a0a      	ldr	r2, [pc, #40]	@ (800043c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000414:	4c0a      	ldr	r4, [pc, #40]	@ (8000440 <LoopForever+0x16>)
  movs r3, #0
 8000416:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000418:	e001      	b.n	800041e <LoopFillZerobss>

0800041a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800041a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800041c:	3204      	adds	r2, #4

0800041e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800041e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000420:	d3fb      	bcc.n	800041a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000422:	f000 f811 	bl	8000448 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000426:	f7ff ff79 	bl	800031c <main>

0800042a <LoopForever>:

LoopForever:
  b LoopForever
 800042a:	e7fe      	b.n	800042a <LoopForever>
  ldr   r0, =_estack
 800042c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000430:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000434:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000438:	080004b0 	.word	0x080004b0
  ldr r2, =_sbss
 800043c:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000440:	20000020 	.word	0x20000020

08000444 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000444:	e7fe      	b.n	8000444 <ADC_IRQHandler>
	...

08000448 <__libc_init_array>:
 8000448:	b570      	push	{r4, r5, r6, lr}
 800044a:	4d0d      	ldr	r5, [pc, #52]	@ (8000480 <__libc_init_array+0x38>)
 800044c:	4c0d      	ldr	r4, [pc, #52]	@ (8000484 <__libc_init_array+0x3c>)
 800044e:	1b64      	subs	r4, r4, r5
 8000450:	10a4      	asrs	r4, r4, #2
 8000452:	2600      	movs	r6, #0
 8000454:	42a6      	cmp	r6, r4
 8000456:	d109      	bne.n	800046c <__libc_init_array+0x24>
 8000458:	4d0b      	ldr	r5, [pc, #44]	@ (8000488 <__libc_init_array+0x40>)
 800045a:	4c0c      	ldr	r4, [pc, #48]	@ (800048c <__libc_init_array+0x44>)
 800045c:	f000 f818 	bl	8000490 <_init>
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	10a4      	asrs	r4, r4, #2
 8000464:	2600      	movs	r6, #0
 8000466:	42a6      	cmp	r6, r4
 8000468:	d105      	bne.n	8000476 <__libc_init_array+0x2e>
 800046a:	bd70      	pop	{r4, r5, r6, pc}
 800046c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000470:	4798      	blx	r3
 8000472:	3601      	adds	r6, #1
 8000474:	e7ee      	b.n	8000454 <__libc_init_array+0xc>
 8000476:	f855 3b04 	ldr.w	r3, [r5], #4
 800047a:	4798      	blx	r3
 800047c:	3601      	adds	r6, #1
 800047e:	e7f2      	b.n	8000466 <__libc_init_array+0x1e>
 8000480:	080004a8 	.word	0x080004a8
 8000484:	080004a8 	.word	0x080004a8
 8000488:	080004a8 	.word	0x080004a8
 800048c:	080004ac 	.word	0x080004ac

08000490 <_init>:
 8000490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000492:	bf00      	nop
 8000494:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000496:	bc08      	pop	{r3}
 8000498:	469e      	mov	lr, r3
 800049a:	4770      	bx	lr

0800049c <_fini>:
 800049c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800049e:	bf00      	nop
 80004a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004a2:	bc08      	pop	{r3}
 80004a4:	469e      	mov	lr, r3
 80004a6:	4770      	bx	lr
